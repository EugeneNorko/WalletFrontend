{"version":3,"file":"static/js/912.bff49f61.chunk.js","mappings":"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","sources":["components/chart/chart.styled.js","components/chart/chart.jsx","components/table/table.styled.js","components/table/table.jsx","components/diagramTab/diagramTab.styled.js","components/diagramTab/diagramTab.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const ChartWrapper = styled.div`\n  width: 280px;\n  height: 280px;\n  margin-right: 32px;\n  position: relative;\n\n  @media screen and (max-width: 767px) {\n    margin-left: auto;\n    margin-right: auto;\n    height: auto;\n    margin-bottom: 32px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    height: 336px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 288px;\n    height: 288px;\n  }\n`;\n\nexport const ChartBalInfo = styled.span`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  font-size: 18px;\n  line-height: calc(26 / 18);\n  font-weight: 700;\n`;\n","import { Chart as ChartJS, ArcElement, Tooltip } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { ChartWrapper, ChartBalInfo } from './chart.styled';\n\nChartJS.register(ArcElement, Tooltip);\n\nexport function Chart({ statistics }) {\n  const { totalExpenses, totalCategories } = statistics;\n  const data = {\n    labels: totalCategories.map(category => category.title),\n    datasets: [\n      {\n        label: 'Statistics',\n        data: totalCategories.map(category =>\n          category.total ? category.total : 0\n        ),\n        backgroundColor: totalCategories.map(category => category.color),\n        borderWidth: 0,\n        cutout: '65%',\n      },\n    ],\n  };\n  return (\n    <>\n      <ChartWrapper>\n        <Doughnut data={data} />\n        <ChartBalInfo>{` â‚´ ${totalExpenses}`}</ChartBalInfo>\n      </ChartWrapper>\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { Form } from 'formik';\nimport { Select } from 'react-dropdown-select';\n\nexport const Tabl = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  text-align: left;\n  margin-bottom: 16px;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n  margin-left: 0;\n  margin-right: auto;\n\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n  }\n`;\n\nexport const StyledField = styled(Select)`\n  &.react-dropdown-select {\n    position: relative;\n    height: 50px;\n    background-color: transparent;\n    border: 1px solid #000;\n    border-radius: 30px;\n    font-family: 'Circe';\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 24px;\n    padding: 0 20px 0 20px;\n    color: #000;\n\n    &::after {\n      content: '';\n      position: absolute;\n      top: 50%;\n      right: 10px;\n      display: block;\n      width: 12px;\n      height: 12px;\n      border-top: 1px solid;\n      border-left: 1px solid;\n      transform: rotate(-135deg) translateY(-50%);\n      transform-origin: 0 0;\n    }\n  }\n\n  .react-dropdown-select-dropdown-handle {\n    position: absolute;\n    visibility: hidden;\n  }\n`;\n\nexport const TabHeader = styled.th`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n  padding: 0 28px;\n\n  @media screen and (max-width: 767px) {\n    padding: 0 20px;\n  }\n`;\n\nexport const TableHead = styled.thead`\n  border-radius: 30px;\n  display: table-header-group;\n  vertical-align: middle;\n  border-color: inherit;\n`;\nexport const TableHeadTr = styled.tr`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 18px;\n  line-height: 27px;\n  border-radius: 30px;\n  height: 58px;\n  background-color: var(--primary-background-color);\n\n  @media screen and (max-width: 767px) {\n    width: 100%;\n  }\n`;\nexport const Tabrow = styled.td`\n  display: inline-flex;\n  align-items: center;\n  padding-top: 15px;\n  padding-bottom: 15px;\n`;\n\nexport const Total = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 0px 30px 15px 30px;\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n`;\nexport const TotalExpenses = styled.span`\n  color: #ff6596;\n`;\nexport const TotalIncome = styled.span`\n  color: #24cca7;\n`;\nexport const TableBody = styled.tbody``;\n\nexport const BodyTr = styled.tr`\n  padding: 0 28px;\n  justify-content: space-between;\n  display: flex;\n  border-bottom: 1px solid #dcdcdf;\n  box-shadow: 0px 1px 0px rgb(255 255 255 / 60%);\n\n  @media screen and (max-width: 767px) {\n    padding: 0 20px;\n  }\n`;\nexport const BodyText = styled.span`\n  padding: 0 0px 0 16px;\n  justify-content: space-between;\n  display: flex;\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n`;\nexport const FieldContainer = styled.div`\n  position: relative;\n  width: 50%;\n\n  @media screen and (max-width: 767px) {\n    width: 100%;\n  }\n`;\n\nexport const TableContainer = styled.div`\n  flex-grow: 1;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport {\n  Total,\n  Tabrow,\n  TabHeader,\n  Tabl,\n  StyledForm,\n  StyledField,\n  TableHead,\n  TableHeadTr,\n  TableBody,\n  BodyTr,\n  BodyText,\n  FieldContainer,\n  TableContainer,\n  TotalExpenses,\n  TotalIncome,\n} from './table.styled';\n\nexport function Table({\n  month,\n  year,\n  initialValues,\n  statistics,\n  onMonthChange,\n  onYearChange,\n  isSuccess,\n}) {\n  const { totalExpenses, totalIncome, totalCategories } = statistics;\n\n  const options = [\n    { name: 'January', value: 1 },\n    { name: 'February', value: 2 },\n    { name: 'March', value: 3 },\n    { name: 'April', value: 4 },\n    { name: 'May', value: 5 },\n    { name: 'June', value: 6 },\n    { name: 'July', value: 7 },\n    { name: 'August', value: 8 },\n    { name: 'September', value: 9 },\n    { name: 'October', value: 10 },\n    { name: 'November', value: 11 },\n    { name: 'December', value: 12 },\n  ];\n\n  const yearOptions = generateYearOptions(initialValues.year);\n  const currentMonth = generateCurrentMonth(month, options);\n\n  return (\n    <>\n      <TableContainer>\n        <Formik initialValues={initialValues}>\n          <StyledForm>\n            <FieldContainer>\n              <StyledField\n                options={options}\n                labelField=\"name\"\n                valueField=\"value\"\n                onChange={onMonthChange}\n                placeholder={currentMonth}\n              />\n            </FieldContainer>\n            <ErrorMessage name=\"month\" />\n            <FieldContainer>\n              <StyledField\n                options={yearOptions.map(year => ({ value: year }))}\n                labelField=\"value\"\n                valueField=\"value\"\n                placeholder={year}\n                onChange={onYearChange}\n              ></StyledField>\n            </FieldContainer>\n          </StyledForm>\n        </Formik>\n        {isSuccess && !totalExpenses && !totalIncome ? null : (\n          <Tabl>\n            <TableHead>\n              <TableHeadTr>\n                <TabHeader>Category</TabHeader>\n                <TabHeader>Sum</TabHeader>\n              </TableHeadTr>\n            </TableHead>\n            <TableBody>\n              {totalCategories.map(category => (\n                <BodyTr key={category.id}>\n                  <Tabrow>\n                    <p\n                      style={{\n                        backgroundColor: category.color,\n                        width: '30px',\n                        height: '30px',\n                      }}\n                    ></p>\n                    <BodyText>{category.title}</BodyText>\n                  </Tabrow>\n                  <Tabrow></Tabrow>\n                  <Tabrow>\n                    <BodyText>{category.total ? category.total : 0}</BodyText>\n                  </Tabrow>\n                </BodyTr>\n              ))}\n            </TableBody>\n          </Tabl>\n        )}\n        <Total>\n          Expenses:\n          <TotalExpenses>{totalExpenses}</TotalExpenses>\n        </Total>\n        <Total>\n          Income: <TotalIncome>{totalIncome}</TotalIncome>\n        </Total>\n      </TableContainer>\n    </>\n  );\n}\n\nfunction generateCurrentMonth(month, options) {\n  let currentMonth = options.filter(e => e.value === month);\n\n  return currentMonth[0].name;\n}\n\nfunction generateYearOptions(currentYear) {\n  let yearOptions = [];\n  for (let i = 2017; i <= currentYear; i += 1) {\n    yearOptions.push(i);\n  }\n  return yearOptions;\n}\n","import styled from 'styled-components';\n\nexport const StatisticsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-grow: 1;\n\n  @media screen and (max-width: 768px) {\n    padding-top: 0;\n  }\n\n  @media screen and (min-width: 1279px) {\n    padding-top: 30px;\n    margin-left: 138px;\n  }\n\n  h2 {\n    width: 100%;\n    margin-bottom: 20px;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 30px;\n    line-height: 45px;\n  }\n\n  p {\n    width: 100%;\n  }\n`;\n","import Notiflix from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Chart } from 'components/chart/chart';\nimport { Table } from 'components/table/table';\nimport { useGetStatisticsMutation } from 'redux/transactionsSlice';\nimport { StatisticsContainer } from './diagramTab.styled';\n\nconst initialValues = {\n  month: new Date().getMonth() + 1,\n  year: new Date().getFullYear(),\n};\n\nexport function DiagramTab() {\n  const statistics = useSelector(state => state.userInformation.financeData);\n  const [month, setMonth] = useState(initialValues.month);\n  const [year, setYear] = useState(initialValues.year);\n\n  const [getStatistics, { isSuccess }] = useGetStatisticsMutation();\n\n  Notiflix.Notify.merge({\n    timeout: 2000,\n    width: '300px',\n    useIcon: true,\n    fontSize: '12px',\n    distance: '90px',\n    clickToClose: true,\n  });\n  useEffect(() => {\n    getStatistics({ month, year }).then(({ data }) => {\n      const { totalExpenses, totalIncome } = data[0];\n      if (!totalExpenses && !totalIncome) {\n        Notiflix.Notify.warning(\n          'There are no transactions in the selected period'\n        );\n      }\n    });\n  }, [month, year, getStatistics]);\n\n  const handleMonthChange = e => {\n    setMonth(Number(e[0].value));\n  };\n  const handleYearChange = e => {\n    setYear(Number(e[0].value));\n  };\n\n  return (\n    <>\n      <StatisticsContainer>\n        <h2>Statistics</h2>\n\n        {statistics && isSuccess && (\n          <>\n            {statistics?.totalIncome || statistics?.totalExpenses ? (\n              statistics?.totalExpenses ? (\n                <Chart statistics={statistics} />\n              ) : (\n                <p>There are no expenses in the selected period</p>\n              )\n            ) : null}\n\n            <Table\n              month={month}\n              year={year}\n              initialValues={initialValues}\n              statistics={statistics}\n              onMonthChange={handleMonthChange}\n              onYearChange={handleYearChange}\n              isSuccess={isSuccess}\n            />\n          </>\n        )}\n      </StatisticsContainer>\n    </>\n  );\n}\n\nexport default DiagramTab;\n"],"names":["ChartWrapper","styled","div","_templateObject","_taggedTemplateLiteral","ChartBalInfo","span","_templateObject2","Chart","_ref","statistics","totalExpenses","totalCategories","data","labels","map","category","title","datasets","label","total","backgroundColor","color","borderWidth","cutout","_jsx","_Fragment","children","_jsxs","Doughnut","concat","ChartJS","register","ArcElement","Tooltip","Tabl","table","StyledForm","Form","StyledField","Select","_templateObject3","TabHeader","th","_templateObject4","TableHead","thead","_templateObject5","TableHeadTr","tr","_templateObject6","Tabrow","td","_templateObject7","Total","_templateObject8","TotalExpenses","_templateObject9","TotalIncome","_templateObject10","TableBody","tbody","_templateObject11","BodyTr","_templateObject12","BodyText","_templateObject13","FieldContainer","_templateObject14","TableContainer","_templateObject15","Table","month","year","initialValues","onMonthChange","onYearChange","isSuccess","totalIncome","options","name","value","yearOptions","currentYear","i","push","generateYearOptions","currentMonth","filter","e","generateCurrentMonth","Formik","labelField","valueField","onChange","placeholder","ErrorMessage","style","width","height","id","StatisticsContainer","Date","getMonth","getFullYear","DiagramTab","useSelector","state","userInformation","financeData","setMonth","useState","setYear","getStatistics","useGetStatisticsMutation","Notiflix","merge","timeout","useIcon","fontSize","distance","clickToClose","useEffect","then","warning","Number"],"sourceRoot":""}